#!/bin/bash -e

usage() {
  cat << EOF
Attaches custom user role policy for cluster node group

Usage: 

$(basename "$0") -c lorem-ipsum -f etc/iam-role-policy.json

or

$(basename "$0") -c lorem-ipsum -p AmazonS3FullAccess

Parameters:
    -c --eks-cluster      Name of the eks cluster
    -f  --file            Policy document 
    -p  --policy          Policy name
    --aws-region          AWS Region
    --aws-profile         AWS Profile
    -V  --verbose         Verbose outputs for debug purpose
EOF
}

test -f ".env" && source .env
export AWS_DEFAULT_OUTPUT=text

# POLICY_DOC="$(dirname "$0")/iam-role-policy.json"

while [ "$1" != "" ]; do
  case $1 in
    -c | --cluster )    shift
                        CLUSTER_NAME="$1"
                        ;;
    -p | --policy )     shift
                        POLICY_NAME="$1"
                        ;;
    -f | --file )       shift
                        export POLICY_DOC="$1"
                        ;;
    --aws-region )      shift
                        export AWS_REGION="$1"
                        ;;
    --aws-profile )     shift
                        export AWS_PROFILE="$1"
                        ;;
    -V | --verbose )    set -x
                        ;;
    -h | --help )       usage
                        exit
                        ;;
    * )                 usage
                        exit 1
  esac
  shift
done

if test -z "$CLUSTER_NAME" || test "$POLICY_NAME $POLICY_DOC" = " "; then
  usage
  exit 1
fi


echo "Attaching policy to $CLUSTER_NAME node group:"
echo "* Using region: $AWS_REGION"
echo -n "* Using node group role: ... "
ROLE_ARN=$(eksctl get iamidentitymapping --cluster "$CLUSTER_NAME" -o json | jq -r '.[0].rolearn')
ROLE_NAME=$(basename $ROLE_ARN)
echo "$ROLE_NAME"

if test -n "$POLICY_DOC"; then
  ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account')
  POLICY_ARN="arn:aws:iam::$ACCOUNT_ID:policy/$POLICY_NAME"
  echo "* Using policy file: $POLICY_DOC"
  if test ! -f "$POLICY_DOC"; then
    cat << EOF 

  Error: file $POLIICY_DOC not found!

EOF
    exit 2
  fi

  echo -n "* Creating role policy: ... "
  aws iam get-policy \
    --policy-arn "$POLICY_ARN" \
    --query 'Policy.Arn' 2>/dev/null \
    || aws iam create-policy \
        --policy-name "$POLICY_NAME" \
        --policy-document "file://$POLICY_DOC" \
        --query 'Policy.Arn'
fi

if test -n "$POLICY_NAME"; then
  echo -n "* Using policy: ... "  
  # shellcheck disable=SC2006
  POLICY_ARN=$(aws iam list-policies \
                --query "Policies[?PolicyName==\`$POLICY_NAME\`].Arn")
  if test "$?" != "0" || test -z "$POLICY_ARN"; then
    cat << EOF Error

Cannot find existing AIM policy with name $POLICY_NAME

EOF
    exit 2
  fi
  echo "$POLICY_ARN"
fi

echo -n "* Attaching policy to role $ROLE_NAME: ... "
aws iam attach-role-policy \
  --role-name "$ROLE_NAME" \
  --policy-arn "$POLICY_ARN"

echo "Done"
