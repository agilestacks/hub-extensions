#!/bin/sh -e

if test -z "$1"; then
  cat << EOF
Error: verb has not been specidfied: $(basename "$0") VERB

Currently supported verbs: deploy, undeploy
EOF
  exit 1;
fi

VERB="$1"
kubectl="kubectl"
yq="yq -M"
if test -n "$DOMAIN_NAME"; then
  kubectl="$kubectl --context=$DOMAIN_NAME"
fi
if test -n "$NAMESPACE"; then
  kubectl="$kubectl --namespace=$NAMESPACE"
fi

case "$VERB" in
  "deploy" )
    kubectl_cmd="$kubectl apply"
  ;;
  "undeploy" )
    kubectl_cmd="$kubectl delete"
  ;;
  * )
    echo "Error: unsupported verb: $VERB"
    exit 1
  ;;
esac

DOMAIN_NAME=${DOMAIN_NAME:?"DOMAIN_NAME has not been defined"}
NAMESPACE=${NAMESPACE:?"DOMAIN_NAME has not been defined"}

if test $VERB = "deploy"; then
  if ! $kubectl get namespace "$NAMESPACE" > /dev/null;  then
    $kubectl create namespace "$NAMESPACE"
  fi
  if test -d "crds"; then
    echo "* Processing CRDs..."
    for f in crds/*.yaml; do
      max_di=$($yq e 'di' "$f" | tail -1)
      for i in $(seq 0 "$max_di"); do
        crd=$($yq e "select(di == $i).metadata.name" "$f")
        if test -z "$crd" -o "$crd" = "null"; then
          continue
        fi
        if $kubectl get crd "$crd" > /dev/null; then
          echo "- $crd already exists"
        else
          $kubectl create -f "$f"
        fi
      done
    done
  fi
fi

if test -x pre-$VERB; then
  echo "Running pre-$VERB hook..."
  ./pre-$VERB
fi

if which kustomize > /dev/null; then
  WORKDIR="$(mktemp -d)"
  trap 'rm -rf -- "$WORKDIR"' EXIT

  echo "* Running kustomize build"
  kustomize build "." > "$WORKDIR/all.yaml"

  if test -n "$(yq e '. | select(.kind == "Namespace")' "$WORKDIR/all.yaml")"; then
    echo "* Removing shared resource Namespace from kustomize build"
    echo "  HINT: consider to move Namespace to pre-$VERB script"
    yq e '. | select(.kind == "Namespace").metadata.name | "  - " + .' "$WORKDIR/all.yaml"
    yq e '. | select(.kind == "Namespace" | not)' -i "$WORKDIR/all.yaml"
  fi

  # Special case for CRD
  if test -n "$(yq e '. | select(.kind == "CustomResourceDefinition")' "$WORKDIR/all.yaml")"; then
    $yq e '. | select(.kind == "CustomResourceDefinition")' "$WORKDIR/all.yaml" > "$WORKDIR/crds.yaml"
    max_di=$($yq e 'di' "$WORKDIR/crds.yaml" | tail -1)
    if test "$VERB" = deploy; then
      echo "* Processing CRDs before other kustomize resources:"
      for i in $(seq 0 "$max_di"); do
        crd=$($yq e "select(di == $i).metadata.name" "$WORKDIR/crds.yaml")
        if test -z "$crd" -o "$crd" = "null"; then
          continue
        fi

        if $kubectl get crd "$crd" > /dev/null; then
          echo "  - $crd already exists"
        else
          $yq e yq e "select(di == $i)" "$WORKDIR/crds.yaml" | $kubectl create -f -
        fi
      done
    fi

    echo "* Removing CustomResourceDefinition from kustomize build"
    yq e '. | select(.kind == "CustomResourceDefinition" | not)' -i "$WORKDIR/all.yaml"
  fi

  echo "* Processing kustomize resources..."
  $kubectl_cmd -f "$WORKDIR/all.yaml"
else
  echo "Warning: 'kustomze' binary not found. Falling back to 'kubectl -k ...'"
  $kubectl_cmd -k "."
fi

if test -x post-$VERB; then
  echo "Running post-$VERB hook..."
  ./post-$VERB
fi
