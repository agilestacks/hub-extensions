#!/bin/bash -e
# shellcheck disable=SC2086

usage() {
cat << EOF

Deploys this stack

Usage:
$ hub stack undeploy

Deploys all components

$ hub stack undeploy -c component1,component2
Deploys deploys two components

Parameters:
    -c --component        List of components to deploy
    --profile             Can be: deploy-pod (default) | deploy-local | deploy-toolbox
    -o --offset           Deploy starting with the given component
    -l --limit            Component to stop deploy at
    -V  --verbose         Verbose outputs for debug purpose
    --tty                 Use TTY (terminal) mode for hub deploy
    --no-tty              Do not use TTY (terminal) mode for hub deploy
    --                    Separator to define "hub undeploy" low level parameters (see: "hub undeploy --help")
    -h  --help            Print this message

EOF
}

HUB_OPTS=""

dotenv=$(dirname "$0")/env/dotenv
eval "$($dotenv export -f ".env" )"

while [ "$1" != "" ]; do
    case $1 in
        --profile )         shift
                            export HUB_DEPLOY_PROFILE="$1"
                            ;;
        -c | --component )  shift
                            HUB_OPTS="$HUB_OPTS -c $1"
                            ;;
        -o | --offset )     shift
                            HUB_OPTS="$HUB_OPTS -o $1"
                            ;;
        -l | --limit )      shift
                            HUB_OPTS="$HUB_OPTS -l $1"
                            ;;
        --tty )             HUB_OPTS="$HUB_OPTS --tty true"
                            ;;
        --no-tty )          HUB_OPTS="$HUB_OPTS --tty false"
                            ;;
        -V | --verbose )    set -x
                            export HUB_TRACE=1
                            export HUB_DEBUG=1
                            ;;
        -h | --help )       usage
                            exit
                            ;;
        -- )                shift
                            HUB_OPTS="$HUB_OPTS $@"
                            break
                            ;;
        * )                 usage
                            exit 1
    esac
    shift
done

if ! test -f .env; then
  cat << EOF
Error: .env file has not been found
Please run:

  $ hub configure

EOF
  exit 1
fi

cat << EOF
Undeploying: $HUB_DOMAIN_NAME"

Warning: this operation cannot be reverted! It may lead to data loss!

EOF
if test -z "$HUB_CLOUD_PROVIDER"; then
  HUB_DEPLOY_PROFILE=$($dotenv get "HUB_CLOUD_PROVIDER")
fi
if test -n "$HUB_CLOUD_PROVIDER"; then
  echo "* Using cloud: $HUB_CLOUD_PROVIDER"
  HUB_OPTS="--clouds=$HUB_CLOUD_PROVIDER $HUB_OPTS"
fi
echo "* Using cluster: $HUB_DOMAIN_NAME"

if test -z "$HUB_STATE"; then
  HUB_STATE=".hub/$HUB_DOMAIN_NAME.state"
fi
HUB_OPTS="$HUB_OPTS -s $HUB_STATE"
echo "* Using hub state:"
for i in $(echo $HUB_STATE | sed "s/,/ /g"); do
  echo "  - $i"
done

if test -z "$HUB_ELABORATE"; then
  HUB_ELABORATE=".hub/$HUB_DOMAIN_NAME.elaborate"
fi
echo "* Using hub elaborate"
for i in $(echo $HUB_ELABORATE | sed "s/,/ /g"); do
  echo "  - $i"
done

HUB_KUBECONFIG=$($dotenv get "HUB_KUBECONFIG")
if test -n "$HUB_KUBECONFIG" && test -f "$HUB_KUBECONFIG"; then
  KUBECONFIG=$($dotenv get "HUB_KUBECONFIG" --default "$KUBECONFIG")
  export KUBECONFIG
  echo "* Using kubeconfig: $KUBECONFIG"
fi

for f in $HUB_FILES; do
  test -f $f || continue;
  BEFORE="$BEFORE $(yq e '.extensions.undeploy.before.[]' $f)"
  AFTER="$AFTER $(yq e '.extensions.undeploy.after.[]' $f)"
done

for i in $(echo "$BEFORE" | xargs -n1); do
  if test -f "$WORKDIR/.hub/$i/before-undeploy"; then
    hook="$WORKDIR/.hub/$i/before-undeploy"
  elif test -f "$(dirname "$0")/$i/before-undeploy"; then
    hook="$(dirname "$0")/$i/before-undeploy"
  else
    echo "Warning! cannot find before undeploy hook: $i"
    continue
  fi
  echo "Running before undeploy hook: $i"
  $hook
done

if test -z "$HUB_DEPLOY_PROFILE"; then
  HUB_DEPLOY_PROFILE=$($dotenv get "HUB_DEPLOY_PROFILE" --default "pod")
fi

script_dir=$(dirname "$0")
if test -f "$WORKDIR/.hub/profiles/$HUB_DEPLOY_PROFILE/undeploy"; then
  undeploy="$WORKDIR/.hub/profiles/$HUB_DEPLOY_PROFILE/undeploy"
elif test -f "$script_dir/profiles/$HUB_DEPLOY_PROFILE/undeploy"; then
  undeploy="$script_dir/profiles/$HUB_DEPLOY_PROFILE/undeploy"
else
  # shellcheck disable=SC2046
  if test -d "$WORKDIR/.hub/profiles"; then profiles="$profiles $(ls "$WORKDIR/.hub/profiles")"; fi
  if test -d "$script_dir/profiles"; then profiles="$profiles $(ls $script_dir/profiles)"; fi
  cat << EOF

Error! Cannot find deployment profile $HUB_DEPLOY_PROFILE
* Not found: $WORKDIR/.hub/profiles/$HUB_DEPLOY_PROFILE/undeploy
* Not found: $script_dir/profiles/$HUB_DEPLOY_PROFILE/undeploy

Deployment profile configured via .env variable HUB_DEPLOY_PROFILE

Currently supported profiles: $(echo "$profiles" | xargs)

Completed with errors!
EOF
  exit 5
fi

cat << EOF

Proceeding with: undeploy
* Using profile: $HUB_DEPLOY_PROFILE
* Running CLI command:

  $ hub undeploy $HUB_ELABORATE $HUB_OPTS

EOF

$undeploy "$HUB_ELABORATE" $HUB_OPTS

for i in $(echo "$AFTER" | xargs -n1); do
  if test -f "$WORKDIR/.hub/$i/after-undeploy"; then
    hook="$WORKDIR/.hub/$i/after-undeploy"
  elif test -f "$(dirname "$0")/$i/after-undeploy"; then
    hook="$(dirname "$0")/$i/after-undeploy"
  else
    echo "Warning! cannot find after undeploy hook: $i"
    continue
  fi
  echo "Running after undeploy hook: $i"
  $hook
done

echo
echo "Done!"
