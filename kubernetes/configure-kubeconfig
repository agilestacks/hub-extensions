#!/bin/bash -e
# shellcheck disable=SC2086,SC2064,SC2046

KUBECONTEXT="_"
DOT_ENV=${DOT_ENV:-".env"}
while [ "$1" != "" ]; do
  case "$1" in
    --kubeconfig )
      shift
      export KUBECONFIG="$1"
      ;;
    --kubecontext )
      shift
      KUBECONTEXT="$1"
      ;;
    --domain-name )
      shift
      HUB_DOMAIN_NAME="$1"
      ;;
    --save-to )
      shift
      SAVETO="$1"
      ;;
  esac
  shift
done

VERBOSE=${VERBOSE:-false}
if test "$VERBOSE" = "true"; then
  set -x
fi

echo -n "* Checking kubeconfig: $KUBECONFIG"
if test -f "$KUBECONFIG"; then
  echo
else
  echo " (not found)"
  exit 1
fi

echo -n "* Using context: "
if test "$KUBECONTEXT" == "_"; then
  KUBECONTEXT="$(kubectl config current-context)"
fi
echo "$KUBECONTEXT"

echo -n "* Connecting to cluster... "
if kubectl cluster-info --context="$KUBECONTEXT" > /dev/null; then
  echo "Done"
else
  exit 2
fi


CLUSTER_NAME="$(kubectl config view --raw -o json \
| jq -r '.contexts[] | select(.name == "'$KUBECONTEXT'").context.cluster')"

echo "* Extracting kubeconfig for cluster: $CLUSTER_NAME"

if test -z "$HUB_DOMAIN_NAME"; then
  SERVER_HOST="$(kubectl config view --raw -o json \
| jq -r '.clusters[] | select(.name == "'$CLUSTER_NAME'").cluster.server' \
| awk -F '[/:]' '{print $4}')"
  echo "* Warning! HUB_DOMAIN_NAME not defined using from kubeconfig: $SERVER_HOST"
  HUB_DOMAIN_NAME="$SERVER_HOST"
fi

USERNAME="$(kubectl config view --raw -o json \
| jq -r '.contexts[] | select(.name == "'$KUBECONTEXT'").context.user')"
CLUSTER="$(kubectl config view --raw -o json \
| jq -cM '.clusters[] | select(.name == "'$CLUSTER_NAME'") + {"name": "'$HUB_DOMAIN_NAME'"}')"
USER="$(kubectl config view --raw -o json \
| jq -cM '.users[] | select(.name == "'$USERNAME'")')"
cat <<EOF > $SAVETO
{
  "kind": "Config",
  "apiVersion": "v1",
  "preferences": {},
  "clusters": [
    $CLUSTER
  ],
  "users": [
    $USER
  ],
  "contexts": [
    {
      "name": "$HUB_DOMAIN_NAME",
      "context": {
        "cluster": "$HUB_DOMAIN_NAME",
        "user": "$USERNAME"
      }
    }
  ],
  "current-context": "$HUB_DOMAIN_NAME"
}
EOF

echo -n "* Validating kubeconfig... "
export KUBECONFIG="$SAVETO"
if kubectl cluster-info --context="$HUB_DOMAIN_NAME" > /dev/null; then
  echo "Done"
else
  exit 3
fi
