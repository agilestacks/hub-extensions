#!/bin/bash -e
# shellcheck disable=SC2086,SC2064,SC2046

usage() {
cat << EOF
Kubernetes parameters:
  --kubeconfig            Path to the kubeconfig. If not specified then use default to kubectl
  --kubecontext           Name of Kubernetes context in Kubeconfig file
                          "_" reserved for "current context"
  --current-kubecontext   Use current kubecontext existing
                          configuration (mandatory)

Use: hub configure [--kubecontext _] or [--current-kubecontext] for current kubecontext

EOF
}

KUBECONTEXT="_"
DOT_ENV=${DOT_ENV:-".env"}
while [ "$1" != "" ]; do
  case "$1" in
    --kubeconfig ) 
      shift
      KUBECONFIG="$1" 
      ;;
    --kubecontext )
      shift
      KUBECONTEXT="$1"
      ;;
    --current-kubecontext )
      KUBECONTEXT="_"
      ;;
    -o | --output )
      shift
      DOT_ENV="$1"
      ;;
    --help )
      usage
      exit
      ;;
  esac
  shift
done

VERBOSE=${VERBOSE:-false}
if test "$VERBOSE" = "true"; then
  set -x
fi

dotenv="$(dirname $(dirname $0))/env/dotenv -f $DOT_ENV)"
HUB_DOMAIN_NAME=${HUB_DOMAIN_NAME:-$($dotenv get "HUB_DOMAIN_NAME")}
if test -z "$KUBECONTEXT"; then
  usage
  exit 1
fi

TEMP=$(mktemp || exit 1)
trap "rm -f $TEMP" EXIT

export KUBECONFIG KUBECONTEXT

echo "Configuring Kubernetes"
if test -n "$KUBECONFIG"; then
  echo "* Using configuration from: $KUBECONFIG"
  $(dirname $0)/configure-kubeconfig -o "$TEMP"
elif test -f "/var/run/secrets/kubernetes.io/serviceaccount/token"; then
  # echo "* Using configuration: I am running inside of a pod"
  $(dirname $0)/configure-local -o "$TEMP"
else
  $(dirname $0)/configure-kubeconfig -o "$TEMP"
fi

abspath() {
  if test -d "$1"; then
    (cd "$1" && pwd)
  elif test -f "$1"; then
    echo "$(cd $(dirname $1) && pwd)/$(basename $1)"
  fi
}

WORKDIR=${WORKDIR:-$(pwd)}
echo -n "* Saving kubeconfig to .hub/env/$HUB_DOMAIN_NAME.kubeconfig: "
$(dirname $(dirname $0))/env/copy "$TEMP" "$WORKDIR/.hub/env/$HUB_DOMAIN_NAME.kubeconfig"
ABSPATH="$(abspath $WORKDIR/.hub/env/$HUB_DOMAIN_NAME.kubeconfig)"
DOT_ENV=${DOT_ENV:-"$WORKDIR/.env"}
cat << EOF >> $DOT_ENV
# Location of sand boxed kubeconfig
KUBECONFIG="$ABSPATH"
EOF
