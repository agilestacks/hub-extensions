#!/bin/bash -e

# Simple wrapper script around hub deploy

HUB=$(which hub)
if test -z "$HUB"; then
  echo "Error: hub cli cannot be found"
  exit 1
fi

# shellcheck disable=SC2046
dotenv="$(dirname $(dirname $(dirname "$0")))/env/dotenv -f .env"
if test -f ".env"; then
  set +a
  eval "$($dotenv export -f ".env" )"
  set -a
fi

TOOLBOX_NAMESPACE=${TOOLBOX_NAMESPACE:-automation-tasks}
ID=$(uuidgen | tr '[:upper:]' '[:lower:]' | tr -d - | cut -c-8)

HUB_ARGS=$*
while (( "$#" )); do
  case $1 in
    -s | --state )
      shift 
      STATE_FILE=$1
      break
    ;;    
  esac
  shift
done

if test -z "$STATE_FILE"; then
  STATE_FILE=".hub/$HUB_DOMAIN_NAME.state"
fi

finalize() {
  echo
  echo  -n "* Downloading hub state to $STATE_FILE: "
  set +e
  $kubectl cp --no-preserve=false "toolbox-$ID:$STATE_FILE" "$STATE_FILE" >/dev/null 2>&1; 
  echo "Done"
  echo -n "* Finalizing toolbox-$ID: "
  out=$(kubectl delete -f "$1" --wait --timeout=300s)
  rv=$?
  rm -rf "$1"
  set -e
  if test "$rv" -ne "0"; then
    cat <<EOF
Warning: toolbox-$ID deletion exited with: $rv
$out
EOF
  else
    echo "Done"
  fi
}

echo "Starting toolbox pod: toolbox-$ID"
temp=$(mktemp) || exit 1
trap 'finalize $temp' EXIT
"$(dirname "$0")/template" --exec-id "$ID" --namespace="$TOOLBOX_NAMESPACE" > "$temp"

kubectl="kubectl -n $TOOLBOX_NAMESPACE" 
echo -n "* Checking presence of $TOOLBOX_NAMESPACE: "
if ! kubectl get namespace "$TOOLBOX_NAMESPACE" -o "name" 2>/dev/null; then
  echo "not found"
  echo -n "Deploying namespace: "
  kubectl create namespace "$TOOLBOX_NAMESPACE"
fi

echo -n "* Scheduling a pod toolbox-$ID: "
if $kubectl -f "$temp" apply >/dev/null; then 
  echo "Done"
else 
  exit $?
fi
echo -n "* Starting pod toolbox-$ID: "
$kubectl wait "pod/toolbox-$ID" \
  --for=condition=Ready \
  --timeout=1200s

echo -n "* Synchronizing working directory (may take few minutes): "
find "." -type f \
  ! -path './.git/*' \
  ! -path './.envrc' \
  ! -path './.kubeconfig' \
  ! -path './kubeconfig.*' \
  | tar -cT - | \
  $kubectl exec -i "toolbox-$ID" -- tar xf -
echo "Done"

cloud=$($dotenv get HUB_CLOUD_PROVIDER)
if test -n "$cloud"; then
  echo -n "* Configuring $cloud credentials: "
  case "$cloud" in
    "aws" )
      shift
      "$(dirname "$0")/aws" \
        --namespace "$TOOLBOX_NAMESPACE" \
        --pod "toolbox-$ID" \
        --profile "$($dotenv get AWS_PROFILE)" && echo "Done"
    ;;
    * )
      echo "Warning; $cloud provider not yet supported!"
    ;;    
  esac
fi

echo "Starting deployment"
set +e
# shellcheck disable=SC2086
$kubectl exec -i "toolbox-$ID" -- hub $HUB_ARGS
set -e
RET_VAL=$?
echo  "Done"
exit $RET_VAL
