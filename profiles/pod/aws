#!/bin/bash -e
# shellcheck disable=SC2086
kubectl="$(which kubectl)"
while (( "$#" )); do
  case $1 in
    --namespace )
      shift 
      kubectl="$kubectl -n $1"
    ;;
    --pod )
      shift
      POD="$1"
    ;;    
  esac
  shift
done

# shellcheck disable=SC2046
dotenv="$(dirname $(dirname $(dirname "$0")))/env/dotenv -f .env"
if test -f ".env"; then
  set +a
  eval "$($dotenv export)"
  set -a
fi

if test -z "$POD"; then
  echo "Error: missing value for argument: --pod"
  exit 1
fi

aws_creds=$($dotenv get "AWS_SHARED_CREDENTIALS_FILE" --default "$HOME/.aws/credentials")
aws_config=$($dotenv get "AWS_CONFIG_FILE" --default "$HOME/.aws/config")
aws_profile=$($dotenv get "AWS_PROFILE")

if test -n "$aws_profile"; then
  AWS_ARGS="$AWS_ARGS --profile $aws_profile"
else
  # do not add aws cli arg
  aws_profile="default"
fi

render_conf_line() {
  local val
  if val=$(aws $AWS_ARGS configure get "$1"); then
    if test -n "$val"; then
      echo "$1 = $val"
    fi
  fi
}

temp_dir=$(mktemp -d)
mkdir -p "$temp_dir"
trap 'rm -rf $temp_dir' EXIT
{
  echo "[$aws_profile]"
  render_conf_line "aws_access_key_id"
  render_conf_line "aws_secret_access_key"
  render_conf_line "aws_session_token"
} > "$temp_dir/$(basename $aws_creds)"
$kubectl exec "$POD" -- mkdir -p "$(dirname "$aws_config")"
$kubectl cp "$temp_dir/$(basename $aws_creds)" "$POD:$(dirname "$aws_config")"

{
  echo "[profile $aws_profile]"
  render_conf_line "region"
} > "$temp_dir/$(basename $aws_config)"
$kubectl exec "$POD" -- mkdir -p "$(dirname "$aws_creds")"
$kubectl cp "$temp_dir/$(basename $aws_config)" "$POD:$(dirname "$aws_config")"
